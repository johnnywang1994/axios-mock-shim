!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("axios"),require("axios-mock-adapter")):"function"==typeof define&&define.amd?define(["axios","axios-mock-adapter"],t):"object"==typeof exports?exports["axios-mock-shim"]=t(require("axios"),require("axios-mock-adapter")):e.AxiosMockShim=t(e.axios,e.AxiosMockAdapter)}(window,(function(e,t){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(t,n){t.exports=e},function(e,n){e.exports=t},function(e,t,n){"use strict";n.r(t),n.d(t,"createAxios",(function(){return O})),n.d(t,"createAPIHandler",(function(){return g}));var o=n(0),r=n.n(o);function i(e){return function t(n){if(n instanceof Array)return n.map(e=>t(e));if(n instanceof Object){const o={};return Object.keys(n).forEach(r=>{o[e(r)]=t(n[r])}),o}return n}}i((function(e){return e.replace(/[_.-](\w|$)/g,(e,t)=>t.toUpperCase())}));const s=i((function(e){return e.replace(/(?:^|\.?)([A-Z])/g,(e,t)=>"_"+t.toLowerCase())}));function c(e){return null!==e&&"function"==typeof e}function u(e){return null!==e&&"object"==typeof e}function a(e){return JSON.stringify(e)}function l(e,...t){console.error("[axios-mock-shim]: "+e,...t)}const p={delayResponse:500,onNoMatch:"passthrough"},f={baseURL:"/api/",headers:{"Content-Type":"application/json"},timeout:5e3,withCredentials:!0},d=new Set(["GET","POST","PUT","HEAD","DELETE","PATCH","OPTIONS"]),h=new Set(["POST","PUT","PATCH"]);var y=n(1),m=n.n(y);const b=new Set;function x({methodUp:e,beforeRequest:t,data:n}){const o=[];return h.has(e)?(o[0]=n,t&&(o[1]=t({}))):o[0]=t?t(n):n,o}function k({method:e,svc:t,config:n},o,r){let i;var s;i=c(o)?function(e){return new Promise((t,n)=>o(t,n,e))}:o,this["on"+(s=e,s[0].toUpperCase()+s.slice(1))](t,n[0])[r?"replyOnce":"reply"].apply(this,c(i)?[i]:i)}function v(e,t){this.$options=t,this.$instance=e,this.$adapter=null,this.ReplyCache=new Map,this.runBuilder=()=>{},this.init()}function O(e={}){return u(e)?r.a.create(Object.assign(f,e)):l("Config invalid",e)}function g(e,t){return c(e)?u(t)?new v(e,t):l("options invalid",t):l("instance invalid",e)}v.prototype={init(){const{$instance:e}=this,{useMock:t}=this.$options;t&&(this.$adapter=function(e,t={}){return new m.a(e,Object.assign(p,t))}(e)),this.runBuilder=t?(...e)=>()=>this._useMockRequest(...e):(...e)=>()=>this._normalRequest(...e)},use(e,t,n={}){const o=this,{_mock:r,ReplyCache:i,$options:u}=this,{snakifyData:p,beforeRequest:f}=u,d=e.toUpperCase();let h={method:e,svc:t,data:n=p?s(n):n,config:x({methodUp:d,beforeRequest:f,data:n})};const y=a(h);return{with(e){const{useMock:t}=o.$options;if(!t)return this;var n;return c(e)||null!==(n=e)&&Array.isArray(n)?(i.set(y,e),this):l("reply invalid, should be type Function or Array",e)},mock(){const{useMock:e}=o.$options;return e?(r.call(o,h,!1),this):this},mockOnce(){const{useMock:e}=o.$options;return e?(r.call(o,h,!0),this):this},run:o.runBuilder.call(o,h,!1),runOnce:o.runBuilder.call(o,h,!0)}},_mock(e,t){const{$adapter:n,ReplyCache:o,$options:r}=this,{anyReply:i}=r,s=a(e);b.has(s)||(!t&&b.add(s),o.has(s)?k.call(n,e,o.get(s),t):i&&k.call(n,e,i,t))},_useMockRequest(e,t){const{_mock:n,_normalRequest:o}=this;return n.call(this,e,t),o.call(this,e)},_normalRequest({method:e,svc:t,config:n}){const{$instance:o,$options:r}=this,{beforeResponse:i}=r;return d.has(e.toUpperCase())?o[e.toLowerCase()](t,...n).then(i||(e=>e)):l("Invalid http method",e)}};t.default={createAxios:O,createAPIHandler:g}}])}));